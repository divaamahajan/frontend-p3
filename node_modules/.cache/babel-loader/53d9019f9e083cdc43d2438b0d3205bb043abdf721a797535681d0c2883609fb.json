{"ast":null,"code":"import React from'react';import{GoogleLogin}from'@react-oauth/google';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const API_BASE=process.env.REACT_APP_API_BASE;export const GOOGLE_AUTH_VERIFY_URL=\"\".concat(API_BASE,\"/auth/google/verify\");export default function GoogleLoginButton(_ref){let{onLoginSuccess}=_ref;const handleSuccess=async credentialResponse=>{try{const{credential}=credentialResponse;const response=await axios.post(GOOGLE_AUTH_VERIFY_URL,{id_token:credential});onLoginSuccess(response.data);}catch(error){console.error('Login failed:',error);alert('Login failed. Please try again.');}};const handleError=()=>{console.error('Login Failed');alert('Login Failed');};return/*#__PURE__*/_jsx(\"div\",{className:\"google-login-container\",children:/*#__PURE__*/_jsx(GoogleLogin,{onSuccess:handleSuccess,onError:handleError,useOneTap:false,theme:\"filled_blue\",size:\"large\",width:\"100%\",text:\"signin_with\",shape:\"rectangular\"})});}","map":{"version":3,"names":["React","GoogleLogin","axios","jsx","_jsx","API_BASE","process","env","REACT_APP_API_BASE","GOOGLE_AUTH_VERIFY_URL","concat","GoogleLoginButton","_ref","onLoginSuccess","handleSuccess","credentialResponse","credential","response","post","id_token","data","error","console","alert","handleError","className","children","onSuccess","onError","useOneTap","theme","size","width","text","shape"],"sources":["/Users/achin.gupta/Documents/mycode/buildathon-templates/p3/frontend-p3/src/components/login/GoogleLoginButton.jsx"],"sourcesContent":["\nimport React from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\n\nconst API_BASE = process.env.REACT_APP_API_BASE;\nexport const GOOGLE_AUTH_VERIFY_URL = `${API_BASE}/auth/google/verify`;\n\nexport default function GoogleLoginButton({ onLoginSuccess }) {\n  const handleSuccess = async (credentialResponse) => {\n    try {\n      const { credential } = credentialResponse;\n\n      const response = await axios.post(GOOGLE_AUTH_VERIFY_URL, {\n        id_token: credential,\n      });\n\n      onLoginSuccess(response.data);\n    } catch (error) {\n      console.error('Login failed:', error);\n      alert('Login failed. Please try again.');\n    }\n  };\n\n  const handleError = () => {\n    console.error('Login Failed');\n    alert('Login Failed');\n  };\n\n  return (\n    <div className=\"google-login-container\">\n      <GoogleLogin\n        onSuccess={handleSuccess}\n        onError={handleError}\n        useOneTap={false}\n        theme=\"filled_blue\"\n        size=\"large\"\n        width=\"100%\"\n        text=\"signin_with\"\n        shape=\"rectangular\"\n      />\n    </div>\n  );\n}\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,qBAAqB,CACjD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAC/C,MAAO,MAAM,CAAAC,sBAAsB,IAAAC,MAAA,CAAML,QAAQ,uBAAqB,CAEtE,cAAe,SAAS,CAAAM,iBAAiBA,CAAAC,IAAA,CAAqB,IAApB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CAC1D,KAAM,CAAAE,aAAa,CAAG,KAAO,CAAAC,kBAAkB,EAAK,CAClD,GAAI,CACF,KAAM,CAAEC,UAAW,CAAC,CAAGD,kBAAkB,CAEzC,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACgB,IAAI,CAACT,sBAAsB,CAAE,CACxDU,QAAQ,CAAEH,UACZ,CAAC,CAAC,CAEFH,cAAc,CAACI,QAAQ,CAACG,IAAI,CAAC,CAC/B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrCE,KAAK,CAAC,iCAAiC,CAAC,CAC1C,CACF,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxBF,OAAO,CAACD,KAAK,CAAC,cAAc,CAAC,CAC7BE,KAAK,CAAC,cAAc,CAAC,CACvB,CAAC,CAED,mBACEnB,IAAA,QAAKqB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,cACrCtB,IAAA,CAACH,WAAW,EACV0B,SAAS,CAAEb,aAAc,CACzBc,OAAO,CAAEJ,WAAY,CACrBK,SAAS,CAAE,KAAM,CACjBC,KAAK,CAAC,aAAa,CACnBC,IAAI,CAAC,OAAO,CACZC,KAAK,CAAC,MAAM,CACZC,IAAI,CAAC,aAAa,CAClBC,KAAK,CAAC,aAAa,CACpB,CAAC,CACC,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}