{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';// Create axios instance with base configuration\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});export const engagementApi={// Channel management\ngetChannels:()=>api.get('/engagement/channels'),addChannel:channelData=>api.post('/engagement/channels',channelData),// Sentiment analysis\ngetDailySentiment:(channelId,date)=>api.get(\"/engagement/sentiment/daily/\".concat(channelId),{params:{date}}),// Trends and insights\ngetWeeklyTrends:()=>api.get('/engagement/trends/weekly'),getBurnoutWarnings:()=>api.get('/engagement/burnout-warnings')};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","engagementApi","getChannels","get","addChannel","channelData","post","getDailySentiment","channelId","date","params","getWeeklyTrends","getBurnoutWarnings"],"sources":["/Users/achin.gupta/Documents/mycode/buildathon-templates/p3/frontend-p3/src/services/engagementApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const engagementApi = {\n  // Channel management\n  getChannels: () => api.get('/engagement/channels'),\n  addChannel: (channelData) => api.post('/engagement/channels', channelData),\n  \n  // Sentiment analysis\n  getDailySentiment: (channelId, date) => \n    api.get(`/engagement/sentiment/daily/${channelId}`, { params: { date } }),\n  \n  // Trends and insights\n  getWeeklyTrends: () => api.get('/engagement/trends/weekly'),\n  getBurnoutWarnings: () => api.get('/engagement/burnout-warnings'),\n};\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAE7E;AACA,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAM,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAb,GAAG,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,EAAKA,QAAQ,CACrBH,KAAK,EAAK,KAAAI,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClCT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC,CAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,MAAO,MAAM,CAAAU,aAAa,CAAG,CAC3B;AACAC,WAAW,CAAEA,CAAA,GAAMxB,GAAG,CAACyB,GAAG,CAAC,sBAAsB,CAAC,CAClDC,UAAU,CAAGC,WAAW,EAAK3B,GAAG,CAAC4B,IAAI,CAAC,sBAAsB,CAAED,WAAW,CAAC,CAE1E;AACAE,iBAAiB,CAAEA,CAACC,SAAS,CAAEC,IAAI,GACjC/B,GAAG,CAACyB,GAAG,gCAAAb,MAAA,CAAgCkB,SAAS,EAAI,CAAEE,MAAM,CAAE,CAAED,IAAK,CAAE,CAAC,CAAC,CAE3E;AACAE,eAAe,CAAEA,CAAA,GAAMjC,GAAG,CAACyB,GAAG,CAAC,2BAA2B,CAAC,CAC3DS,kBAAkB,CAAEA,CAAA,GAAMlC,GAAG,CAACyB,GAAG,CAAC,8BAA8B,CAClE,CAAC,CAED,cAAe,CAAAzB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}